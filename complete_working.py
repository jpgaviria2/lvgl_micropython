# COMPLETE WORKING SOLUTION - All commands in sequence
print("=== COMPLETE WORKING SOLUTION ===")
print("Copy and paste each section individually in Thonny:")
print()

print("# === SECTION 1: INITIALIZATION ===")
print("import machine")
print("import time")
print("import gc")
print("import lvgl as lv")
print("import lcd_bus")
print("import st7796")
print("import i2c")
print()

print("# === SECTION 2: HARDWARE SETUP ===")
print("gc.collect()")
print("lv.init()")
print()
print("rst_pin = machine.Pin(4, machine.Pin.OUT)")
print("rst_pin.off()")
print("time.sleep_ms(10)")
print("rst_pin.on()")
print("time.sleep_ms(10)")
print()
print("backlight = machine.Pin(6, machine.Pin.OUT)")
print("backlight.on()")
print()

print("# === SECTION 3: DISPLAY SETUP ===")
print("spi_bus = machine.SPI.Bus(host=1, mosi=1, miso=2, sck=5)")
print("display_bus = lcd_bus.SPIBus(spi_bus=spi_bus, freq=5_000_000, dc=3, cs=-1)")
print()
print("display = st7796.ST7796(")
print("    data_bus=display_bus,")
print("    display_width=320,")
print("    display_height=480,")
print("    backlight_pin=6,")
print("    color_space=lv.COLOR_FORMAT.RGB565,")
print("    color_byte_order=st7796.BYTE_ORDER_RGB,")
print("    rgb565_byte_swap=True,")
print(")")
print()
print("display.set_power(True)")
print("display.init()")
print("display.set_backlight(100)")
print("print('Display hardware ready!')")
print()

print("# === SECTION 4: UI CREATION ===")
print("disp = lv.display_get_default()")
print("scr = lv.screen_active()")
print("scr.set_style_bg_color(lv.color_hex(0x00FF00), 0)  # Green")
print()
print("label = lv.label(scr)")
print("label.set_text('DISPLAY WORKS!')")
print("label.set_style_text_color(lv.color_hex(0x000000), 0)  # Black")
print("label.center()")
print()
print("lv.refr_now(disp)")
print("print('Should see green background with black text!')")
print()

print("# === SECTION 5: TOUCH SETUP ===")
print("touch_bus = i2c.I2C.Bus(host=0, scl=7, sda=8, freq=400000, use_locks=False)")
print("touch_dev = i2c.I2C.Device(bus=touch_bus, dev_id=0x38, reg_bits=8)")
print("print('Touch I2C ready!')")
print()

print("# === SECTION 6: INTERACTIVE BUTTON ===")
print("btn = lv.button(scr)")
print("btn.set_size(120, 60)")
print("btn.align(lv.ALIGN.BOTTOM_MID, 0, -20)")
print()
print("btn_label = lv.label(btn)")
print("btn_label.set_text('TOUCH ME')")
print("btn_label.center()")
print()
print("counter = 0")
print("def btn_clicked(e):")
print("    global counter")
print("    counter += 1")
print("    btn_label.set_text(f'HIT {counter}!')")
print("    print(f'Button touched! Count: {counter}')")
print()
print("btn.add_event_cb(btn_clicked, lv.EVENT.CLICKED, None)")
print("lv.refr_now(disp)")
print("print('Interactive button ready!')")
print()

print("# === SECTION 7: TOUCH INTEGRATION ===")
print("def touch_read(indev, data):")
print("    try:")
print("        touch_data = touch_dev.read_mem(0x02, 1)[0]")
print("        if touch_data > 0:")
print("            x_data = touch_dev.read_mem(0x03, 2)")
print("            y_data = touch_dev.read_mem(0x05, 2)")
print("            x = (x_data[0] << 8) | x_data[1]")
print("            y = (y_data[0] << 8) | y_data[1]")
print("            data.point.x = x")
print("            data.point.y = y")
print("            data.state = lv.INDEV_STATE.PRESSED")
print("            print(f'Touch: {x}, {y}')")
print("        else:")
print("            data.state = lv.INDEV_STATE.RELEASED")
print("    except:")
print("        data.state = lv.INDEV_STATE.RELEASED")
print("    return False")
print()
print("indev = lv.indev_create()")
print("indev.set_type(lv.INDEV_TYPE.POINTER)")
print("indev.set_read_cb(touch_read)")
print("indev.set_display(disp)")
print("indev.enable(True)")
print("print('Touch input device registered!')")
print()

print("# === SECTION 8: EVENT LOOP ===")
print("print('Running touch test for 10 seconds...')")
print("for i in range(100):")
print("    lv.timer_handler()")
print("    time.sleep_ms(100)")
print("    if i % 25 == 0 and i > 0:")
print("        print(f'{10 - (i//10)}s left')")
print()
print("print('Touch test complete!')")
print()

print("=== COPY EACH SECTION ABOVE INTO THONNY ===")
print("Run sections 1-4 first to get display working.")
print("Then add sections 5-8 for touch functionality.")
